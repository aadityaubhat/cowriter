import { ReactNode } from 'react';
import { FileType, Globe, BookText } from 'lucide-react';
import { DocumentType } from '@/types';

// Document type icons mapping
export const DocumentTypeIcons = {
  Custom: () => <FileType className="h-5 w-5 text-gray-500" />,
  Blog: () => <Globe className="h-5 w-5 text-green-500" />,
  Essay: () => <BookText className="h-5 w-5 text-amber-500" />,
  LinkedIn: () => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 448 512"
      className="h-5 w-5 text-[#0A66C2]"
      fill="currentColor"
    >
      {/* Font Awesome LinkedIn Icon */}
      <path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z" />
    </svg>
  ),
  X: () => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      className="h-5 w-5 text-black dark:text-white"
      fill="currentColor"
    >
      {/* Font Awesome X-Twitter Icon */}
      <path d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z" />
    </svg>
  ),
  Threads: () => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 448 512"
      className="h-5 w-5 text-black dark:text-white"
      fill="currentColor"
    >
      {/* Font Awesome Threads Icon */}
      <path d="M331.5 235.7c2.2 .9 4.2 1.9 6.3 2.8c29.2 14.1 50.6 35.2 61.8 61.4c15.7 36.5 17.2 95.8-30.3 143.2c-36.2 36.2-80.3 52.5-142.6 53h-.3c-70.2-.5-124.1-24.1-160.4-70.2c-32.3-41-48.9-98.1-49.5-169.6V256v-.2C17 184.3 33.6 127.2 65.9 86.2C102.2 40.1 156.2 16.5 226.4 16h.3c70.3 .5 124.9 24 162.3 69.9c18.4 22.7 32 50 40.6 81.7l-40.4 10.8c-7.1-25.8-17.8-47.8-32.2-65.4c-29.2-35.8-73-54.2-130.5-54.6c-57 .5-100.1 18.8-128.2 54.4C72.1 146.1 58.5 194.3 58 256c.5 61.7 14.1 109.9 40.3 143.3c28 35.6 71.2 53.9 128.2 54.4c51.4-.4 85.4-12.6 113.7-40.9c32.3-32.2 31.7-71.8 21.4-95.9c-6.1-14.2-17.1-26-31.9-34.9c-3.7 26.9-11.8 48.3-24.7 64.8c-17.1 21.8-41.4 33.6-72.7 35.3c-23.6 1.3-46.3-4.4-63.9-16c-20.8-13.8-33-34.8-34.3-59.3c-2.5-48.3 35.7-83 95.2-83c6.3 0 12.6 .4 18.7 1.3c-6.1-10.2-9.2-22.9-8.8-37.6c.5-21.3 9.5-39.2 24.8-49.2c15.2-9.9 35.1-11.8 55.9-5.3c35.5 11.1 50.8 44.9 45.2 85.4c22.3-2.4 46.8-2.2 70.6 .9zm-75.8 10.8c32.9-30.5 22.8-68.3 6.6-74.9c-16.3-6.7-32.9 5.3-36.2 23.7c-3.3 18.3 3.1 35.8 13.1 47.8c4.3 5.1 9.1 9.3 14 12.3c1 .8 2.1 1.4 3.2 2c6.9-3.5 13.2-7.8 19-13.4c-6.8-5.7-12.7-12.8-17.3-20.9c-3.5-6.2-1.4-14.1 4.8-17.6s14.1-1.4 17.6 4.8c3.4 6 7.9 10.9 12.9 14.6c3.6-6 6.5-12.6 8.6-19.4c-14.2-2.9-25.8-3.2-38.9-1.6c-3.2 .4-6.3 .9-9.4 1.6z" />
    </svg>
  ),
  Reddit: () => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 512 512"
      className="h-5 w-5 text-[#FF4500]"
      fill="currentColor"
    >
      {/* Font Awesome Reddit Logo */}
      <path d="M201.5 305.5c-13.8 0-24.9-11.1-24.9-24.6 0-13.8 11.1-24.9 24.9-24.9 13.6 0 24.6 11.1 24.6 24.9 0 13.6-11.1 24.6-24.6 24.6zM504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-132.3-41.2c-9.4 0-17.7 3.9-23.8 10-22.4-15.5-52.6-25.5-86.1-26.6l17.4-78.3 55.4 12.5c0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.3 24.9-24.9s-11.1-24.9-24.9-24.9c-9.7 0-18 5.8-22.1 13.8l-61.2-13.6c-3-.8-6.1 1.4-6.9 4.4l-19.1 86.4c-33.2 1.4-63.1 11.3-85.5 26.8-6.1-6.4-14.7-10.2-24.1-10.2-34.9 0-46.3 46.9-14.4 62.8-1.1 5-1.7 10.2-1.7 15.5 0 52.6 59.2 95.2 132 95.2 73.1 0 132.3-42.6 132.3-95.2 0-5.3-.6-10.8-1.9-15.8 31.3-16 19.8-62.5-14.9-62.5zM302.8 331c-18.2 18.2-76.1 17.9-93.6 0-2.2-2.2-6.1-2.2-8.3 0-2.5 2.5-2.5 6.4 0 8.6 22.8 22.8 87.3 22.8 110.2 0 2.5-2.2 2.5-6.1 0-8.6-2.2-2.2-6.1-2.2-8.3 0zm7.7-75c-13.6 0-24.6 11.1-24.6 24.9 0 13.6 11.1 24.6 24.6 24.6 13.8 0 24.9-11.1 24.9-24.6 0-13.8-11-24.9-24.9-24.9z" />
    </svg>
  ),
};

// Helper function to safely get document type icon with optional wrapper
export const getDocumentTypeIcon = (type: string, withMargin: boolean = true): ReactNode => {
  const IconComponent = DocumentTypeIcons[type as DocumentType] || DocumentTypeIcons.Custom;
  return withMargin ? (
    <span className="mr-2 inline-flex">{<IconComponent />}</span>
  ) : (
    <IconComponent />
  );
};
